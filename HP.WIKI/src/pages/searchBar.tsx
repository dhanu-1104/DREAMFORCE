
import { useState } from 'react';
import Head from 'next/head';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import CardMedia from '@mui/material/CardMedia';
import Typography from '@mui/material/Typography';
import { CardActionArea } from '@mui/material';
import * as React from "react";

type Character = {
    name: string;
    species: string;
    house: string;
actor:string ;
  dateOfBirth:Date;
  image:string;
alternate_names:string;

};

const SearchBar = () => {
    const [searchValue, setSearchValue] = useState('');
    const [character, setCharacter] = useState<Character | null>(null);
    const [error, setError] = useState(null);



    const handleSearch = async () => {
        try {
            const response = await fetch(`https://hp-api.onrender.com/api/characters?name=${searchValue}`);
            const data = await response.json();
console.log(data)
            // Search for the character with name that includes the search value
            const searchedCharacter = data.find((character: Character) => {
                const name = character.name.toLowerCase();
                return name.includes(searchValue.toLowerCase());
            });
            if (searchedCharacter) {
                setCharacter(searchedCharacter);
                setError(null);
            } else {
                setCharacter(null);
                setError(`No character found with the name "${searchValue}" :(`);
            }
        } catch (error) {
            console.error(error);
            setCharacter(null);
            setError('An error occurred while searching for the character');
        }
    };

    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setSearchValue(event.target.value);
    };

    return (
        <>
            <Head>
                <title>HARRY POTTER WIKI</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/public/vercel.ico"/>
            </Head>
            <body>
            <main>
                <div className=" area landing_page  md:w-[100%]   m-auto mt-[70px] mb-[30px]">
                    <div>
                        <div>
                            <p className="text-center font-bold text-[3.5rem]">Welcome</p>
                        </div>
                        <div className="flex place-content-center ml-[50px] relative">
                            <input
                                className="pl-1rem  w-[43%] border border-gray-300 rounded"
                                style={{ height: '3rem', outline: 'none', padding: '1rem' }}
                                placeholder="Search your character here"
                                value={searchValue}
                                onChange={handleChange}
                            />
                            <button className="hover:bg-blue-700 bg-blue-500 text-white font-bold rounded-md py-2 px-4 ml-4" onClick={handleSearch}>
                                Search
                            </button>
                        </div>
<br/>
                        {error && <p>{error}</p>}
                        {character && (
                            <div className=" flex flex-col place-content-center ml-[41.5%] relative  w-[17%] hover:shadow-[0_4px_0px_rgb(0,0,0)] text-black mb-2 bg-white ease-out hover:translate-y-1 transition-all rounded p-2" >
                                <Typography variant="body2" color="text.secondary">
                                    <p>latest search:</p>
                                </Typography>
                                <Card sx={{ maxWidth: 250 }}>
                                    <CardActionArea>
                                        <CardMedia
                                            component="img"
                                            height="70"
                                            image={character.image}
                                            alt="pic not found"
                                        />
                                        <CardContent>

                                            <Typography >
                                                <div className="text-2xl">{character.name}</div>
                                                <div className="text-small text-blue-500">{character.alternate_names[1] }</div>
                                            </Typography>
                                            <Typography >
                                                <p>DOB:{character.dateOfBirth }</p>
                                            </Typography>
                                            <Typography >
                                                <p>House:{character.house }</p>
                                            </Typography><br/>
                                            <Typography variant="body2" color="text.secondary">
                                                <p>Actor:{character.actor }</p>
                                            </Typography>
                                        </CardContent>
                                    </CardActionArea>
                                </Card>
                            </div>
                        )}
                    </div>
                </div>

            </main>
            </body>
        </>
    );
};

export default SearchBar;
